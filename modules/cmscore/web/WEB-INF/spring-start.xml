<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">
    <mvc:annotation-driven/>

    <!--Список хибернет маппингов для ядра и библиотек работы с узлами-->
    <bean id="listHibPackageNode"  class="java.util.ArrayList">
        <constructor-arg>
            <list>
                <value>rw.gcktc.cms.nodedata</value>
            </list>
        </constructor-arg>
    </bean>

    <!--Конфигурируем хибернет-->
    <import resource="spring-config-hbm.xml"/>

    <!--Сканируем основные пакеты с сервисами для работы CMS-->
    <!--сервис работы с ядром CMS (Node, Rules, ...)-->
    <context:component-scan base-package="rw.gcktc.cms.nodedata.service"/>
    <!--сервис работы с пользователями-->
    <context:component-scan base-package="rw.gcktc.cms.usermanager.service"/>
    <!--Логин контраллеры, кабинет пользователя и изменение данных пользователя-->
    <context:component-scan base-package="rw.gcktc.webcms.controller.login"/>
    <!--Логгинг контраллер, логирует инфу с UI-->
    <context:component-scan base-package="rw.gcktc.webcms.controller.logging"/>
    <!--Контраллер закачки файлов-->
    <context:component-scan base-package="rw.gcktc.webcms.controller.other"/>

    <!-- Configure Apache Tiles for the view -->
    <!-- /WEB-INF/tiles-defs-admincontent.xml - вьюшки для модуля администрации, для доп модулей добавляем сюда же-->
    <!--<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">-->
    <!--<property name="definitions">-->
    <!--<list>-->
    <!--<value>WEB-INF/tiles-defs.xml</value>-->
    <!--<value>WEB-INF/tiles-defs-admincontent.xml</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--<property name="definitions" value="/WEB-INF/tiles-defs.xml, /WEB-INF/tiles-defs-admincontent.xml " />-->
    <!--<property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>-->
    <!--</bean>-->

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">-->
    <!--<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>-->
    <!--</bean>-->


    <!--<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">-->
    <!--<property name="definitions" value="/WEB-INF/tiles-defs.xml, /WEB-INF/tiles-defs-admincontent.xml " />-->
    <!--<property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>-->
    <!--</bean>-->


    <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
    </bean>

    <!--<bean id="userService" class="rw.gcktc.cms.nodedata.service.UserControlServiceHibImplmpl"></bean>-->


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="prefix" value="/WEB-INF/views/"/>-->
    <!--<property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!--Указываем месторасположение статических ресурсов сервера, которые можно отдавать без настройки безопасности (картинки, скрипты, css )-->
    <mvc:resources mapping="/resources/**" location="/resources/"/>


    <!--подключаем мессаже бандле-->

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:resources/MessageResources</value>
                <value>classpath:ValidatorMessages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="ru"/>
        <property name="cookieName" value="locale" />
    </bean>

    <!--<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">-->
    <!--<property name="interceptors" ref="localeChangeInterceptor" />-->
    <!--</bean>-->

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang" />
        </bean>
    </mvc:interceptors>

    <!--Подключает валидатор к локализации-->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">-->
    <!--<property name="validationMessageSource" ref="messageSource" />-->
    <!--</bean>-->
    <!--<mvc:annotation-driven validator="validator"/>-->


    <!--Включаем обработку мультиформ-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--максимальный размер 100 мб, остальное ограничиваем дополнительными настройками-->
        <property name="maxUploadSize" value="104857600" />
    </bean>

    <bean id="imageUploadForUser" class="FileUploader">
        <property name="format">
            <list>
                <value>application/msword</value>
                <value>application/pdf</value>
                <value>image/jpeg</value>
                <value>image/png</value>
                <value>image/gif</value>
            </list>
        </property>
        <!--максимальный размер 3 мб, остальное ограничиваем дополнительными настройками-->
        <property name="maxSize" value="3145728"/>
    </bean>

    <bean id="imageUploadForAvatar" class="FileUploader">
        <property name="format">
            <list>
                <value>image/jpeg</value>
                <value>image/png</value>
                <value>image/gif</value>
            </list>
        </property>
        <!--максимальный размер 500кб, остальное ограничиваем дополнительными настройками-->
        <property name="maxSize" value="512000"/>
    </bean>

    <!--Конфигурируем JSON и XML request-->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />

    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
        <property name="favorParameter" value="true" />
        <property name="mediaTypes" >
            <value>
                x-javascript=application/x-javascript
                json=application/json
                xml=application/xml
            </value>
        </property>

    </bean>



    <!--перенаправление адресов-->
    <mvc:view-controller path="/login.html" view-name="login"/>

</beans>